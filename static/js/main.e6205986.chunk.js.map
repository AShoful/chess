{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","num","useState","green","setGreen","input","setInput","size","setSize","knight","setKnight","icon","xmlns","width","height","fill","className","viewBox","d","context","Array","map","_","i","row","Math","floor","cell","color","target","index","style","String","arr","reduce","res","onSubmit","e","preventDefault","Number","isInteger","type","value","placeholder","onChange","onClick","getAttribute","split","x","y","stepsKnight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA2FeA,MAtEf,WAAgB,IAlBIC,EAkBL,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,mBAAS,IAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIWJ,mBAAS,GAJpB,mBAINK,EAJM,KAIAC,EAJA,OAKeN,mBAAS,IALxB,mBAKNO,EALM,KAKEC,EALF,KA2BPC,EAAO,sBAAKC,MAAM,6BACtBC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,UAAU,cACVC,QAAQ,YALG,UAMX,sBAAMC,EAAE,0EACR,sBAAMA,EAAE,uEACR,sBAAMA,EAAE,yCAGJC,GAxDYlB,EAwDSM,EAvD3Ba,MAAM,KAAD,IAACnB,EAAK,IAAGc,KAAK,IAAIM,KAAI,SAACC,EAAGC,GAC7B,IAAIC,EAAMC,KAAKC,MAAMH,EAAItB,GACrB0B,EAAQJ,EAAItB,EAMhB,MAAO,CAAC2B,OALKJ,EAAMG,GAAQ,IAAM,EAC/B,gBACA,0BAGaE,OAFF,CAACL,EAAKG,QAiDYN,KAAK,SAACS,EAAOP,GAAR,OACpC,+CACMO,GADN,IAEEC,MAAO,CAAClB,MAAO,IAAiBN,EAC9BO,OAAQ,IAAiBP,GAC3BS,UAAWgB,OAAO7B,KAAW6B,OAAOF,EAAMD,QACxC,kBACAC,EAAMF,MANV,UAzB4BK,EAgCFxB,EAhCOoB,EAgCCC,EAAMD,OA/BxCI,EAAIZ,KAAI,SAAAS,GAAK,OAAIE,OAAOF,KAAWE,OAAOH,MACvCK,QAAO,SAACC,EAAKZ,GAAN,OAAYY,EAAMZ,IAAG,GA8BmBZ,EAAO,MAP/CY,GAzBiB,IAACU,EAAKJ,KAmCnC,OACE,sBAAMb,UAAU,MAAhB,SACE,sBAAKA,UAAU,WAAf,UACC,oDACA,sBAAMoB,SAlCU,SAACC,GACpBA,EAAEC,iBACEC,OAAOC,WAAWnC,KAAWA,EAAQ,IAAMA,GAAS,KACtDG,EAAQH,GACRC,EAAS,MA8BR,SACC,uBACEU,UAAU,QACVyB,KAAK,OACLC,MAAOrC,EACPsC,YAAY,mCACZC,SAAU,SAACP,GAAD,OAAO/B,EAAS+B,EAAER,OAAOa,YAGtC,qBAAK1B,UAAU,QAAQ6B,QAtDR,SAAAR,GAClB,IAAIR,EAASQ,EAAER,OAAOiB,aAAa,UAAUC,MAAM,KAAK1B,KAAI,SAAAE,GAAC,OAAKA,KAClEnB,EAASyB,GACTnB,EAdgB,SAACT,GAAD,OAHL+C,EAGoB,EAHjBC,EAGoB,EAHd,CAAC,EAAE,EAAID,GAAI,EAAIC,GAAI,EAAE,EAAID,EAAGC,GAAI,CAACD,EAAGC,GAC1D,CAACD,GAAI,EAAIC,GAAI,EAAE,EAAIA,GAAI,EAAID,GAAI,CAACC,EAAGD,GAAI,EAAE,EAAIC,EAAID,GAAI,CAACC,GAAI,EAAID,KAEvB3B,KAAI,SAAAS,GAAK,MAChD,CAACA,EAAM,GAAK7B,EAAI,GAAI6B,EAAM,GAAK7B,EAAI,OAJvB,IAAC+C,EAAGC,EAiBJC,CAAYrB,KAmDnB,SACEV,UCxEMgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6205986.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst createCell = (num) => \n  Array(num**2).fill('').map((_, i) => {\n    let row = Math.floor(i / num);\n    let cell =  i % num;\n    let color = (row + cell) % 2 === 0 \n    ? 'cell bg-light' \n    : 'cell bg-dark text-white';\n    let target = [row, cell]\n\n    return {color, target} \n  })\n\nconst shift = (x, y) => [[-1 * x, -1 * y], [-1 * x, y], [x, y],\n  [x, -1 * y], [-1 * y, -1 * x], [y, x], [-1 * y,  x], [y, -1 * x]]\n\nconst stepsKnight = (num) => shift(2, 1).map(index => \n  [index[0] + num[0], index[1] + num[1]])\n\nfunction App() {\n\n  const [green, setGreen] = useState([]);\n  const [input, setInput] = useState('');\n  const [size, setSize] = useState(8);\n  const [knight, setKnight] = useState([]);\n  const fieldWidth = 320;\n  \n  const handleClick = e => {\n    let target = e.target.getAttribute('target').split(',').map(i => +i);\n    setGreen(target)\n    setKnight(stepsKnight(target))\n  }\n\n  const checkMoveOfTheKnight = (arr, target) => \n    arr.map(index => String(index) === String(target))\n      .reduce((res, i) => res + i, 0)\n  \n  \n  const hangleSubmit = (e) => {\n    e.preventDefault()\n    if (Number.isInteger(+input) && +input > 0 && +input <= 25) {\n      setSize(input)\n      setInput('')\n   }\n  }\n  \n  const icon = <svg xmlns=\"http://www.w3.org/2000/svg\" \n    width=\"16\" \n    height=\"16\" \n    fill=\"currentColor\" \n    className=\"bi bi-vinyl\" \n    viewBox=\"0 0 16 16\">\n    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path d=\"M8 6a2 2 0 1 0 0 4 2 2 0 0 0 0-4zM4 8a4 4 0 1 1 8 0 4 4 0 0 1-8 0z\"/>\n    <path d=\"M9 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n  </svg>\n  \n  const context = createCell(size).map( (index, i) => \n    <div key={i} \n      {...index} \n      style={{width: (fieldWidth - 4)/size, \n        height: (fieldWidth - 4)/size}}\n      className={String(green) === String(index.target) ? \n        \"cell bg-success\" :\n        index.color  }>\n        {checkMoveOfTheKnight(knight, index.target) ? icon : ''}\n    </div>) \n\n  return (\n    <main className=\"App\">\n      <div className=\"App-main\">\n       <h1>Move of the knight</h1>\n       <form onSubmit={hangleSubmit}>\n        <input\n          className=\"Input\"\n          type='text'\n          value={input}\n          placeholder=\"select a board size from 1 to 25\"\n          onChange={(e) => setInput(e.target.value)}\n          />\n        </form>\n       <div className=\"field\" onClick={handleClick}>\n        {context} \n       </div>\n       </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}